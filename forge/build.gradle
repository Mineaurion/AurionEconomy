plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

java {
    sourceCompatibility = 1.8
    targetCompatibility = 17
}

minecraft {
    mappings channel: 'official', version: '1.16.5'

    copyIdeResources = true
    runs {
        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/removed as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.enabledGameTestNamespaces', 'aurioneconomy'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            arg '-nogui'

            mods {
                aurioneconomy {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', 'aurioneconomy'
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.34'

    shadow project(':common')

    shadow 'com.google.code.gson:gson:2.7' // TODO: need to move away it's just for testing for now
    shadow 'com.google.guava:guava:19.0' //
}


reobf {
    shadowJar {} // Reobfuscate the shadowed JAR
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "AurionEconomy",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

shadowJar {
    configurations = [project.configurations.shadow]

    dependencies {
        exclude '/mappings/*'
        exclude 'net.minecraft.*'
    }

    relocate 'org.slf4j', 'com.mineaurion.aurioneconomy.lib.slf4j'
    relocate 'net.kyori.adventure', 'com.mineaurion.aurioneconomy.lib.adventure'
    relocate 'net.kyori.event', 'com.mineaurion.aurioneconomy.lib.eventbus'
    relocate 'me.lucko.commodore', 'com.mineaurion.aurioneconomy.lib.commodore'
    relocate 'com.google', 'com.mineaurion.aurioneconomy.lib.google'
}

jar.finalizedBy('reobfJar')
